[{"/home/sowmya/codefellows/401/todo/todo-lab31/src/index.js":"1","/home/sowmya/codefellows/401/todo/todo-lab31/src/app.js":"2","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/todo.js":"3","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/form.js":"4","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/list.js":"5"},{"size":226,"mtime":1611043169645,"results":"6","hashOfConfig":"7"},{"size":360,"mtime":1611046489425,"results":"8","hashOfConfig":"7"},{"size":2458,"mtime":1611044698895,"results":"9","hashOfConfig":"7"},{"size":2033,"mtime":1611029165870,"results":"10","hashOfConfig":"7"},{"size":399,"mtime":1611041468245,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"h5mz53",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/sowmya/codefellows/401/todo/todo-lab31/src/index.js",[],["24","25"],"/home/sowmya/codefellows/401/todo/todo-lab31/src/app.js",[],"/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/todo.js",["26"],"import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport './todo.scss';\n\nfunction ToDo() {\n\n    // list[i].complete\n    // document.title = list[i].complete.size;\n    const [list, setList] = useState([]);\n\n    const addItem = (item) => {\n        item._id = Math.random();\n        item.complete = false;\n        setList({ list: [...list, item] });\n    };\n\n    const toggleComplete = id => {\n\n        let item = list.filter(i => i._id === id)[0] || {};\n\n        if (item._id) {\n            item.complete = !item.complete;\n            let list = list.map(listItem => listItem._id === item._id ? item : listItem);\n            setList({ list });\n        }\n\n    };\n\n    useEffect(() => {\n        let list = [\n            { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n            { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n            { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n            { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n            { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n        ];\n\n        setList({ list });\n\n    }, []);\n\n    // This runs only when the list changes\n    useEffect(() => {\n        setTitle(list)\n    }, [list])\n\n    return (\n        <>\n            <header>\n                <h2>\n                    There are {list.length} Items To Complete\n                {/* There are {list.filter(item => !item.complete).length} Items To Complete */}\n                </h2>\n            </header>\n\n            <section className=\"todo\">\n\n                <div>\n                    <TodoForm handleSubmit={addItem} />\n                </div>\n\n                <div>\n                    <TodoList\n                        list={list}\n                        handleComplete={toggleComplete}\n                    />\n                </div>\n            </section>\n        </>\n    );\n}\n\nfunction setTitle(list) {\n\n    var completeCount = 0\n    for (let index = 0; index < list.length; index++) {\n        if (list[index].complete === true) {\n            completeCount++\n        }        \n    }\n\n    const incompleteCount = list.length - completeCount\n\n    document.title = \"Incomplete: \" + incompleteCount + \" | Complete: \" + completeCount\n}\n\n\nexport default ToDo;","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/form.js",[],"/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/list.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":25,"column":24,"nodeType":"33","messageId":"34","endLine":25,"endColumn":28},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-use-before-define","'list' was used before it was defined.","Identifier","usedBeforeDefined","no-global-assign","no-unsafe-negation"]