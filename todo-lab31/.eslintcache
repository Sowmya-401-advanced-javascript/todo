[{"/home/sowmya/codefellows/401/todo/todo-lab31/src/index.js":"1","/home/sowmya/codefellows/401/todo/todo-lab31/src/app.js":"2","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/todo.js":"3","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/form.js":"4","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/list.js":"5","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/todo-connected.js":"6","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/form-hook.js":"7","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/useAjax.js":"8"},{"size":226,"mtime":1611046989035,"results":"9","hashOfConfig":"10"},{"size":370,"mtime":1611192516960,"results":"11","hashOfConfig":"10"},{"size":2452,"mtime":1611111016047,"results":"12","hashOfConfig":"10"},{"size":1357,"mtime":1611117148307,"results":"13","hashOfConfig":"10"},{"size":453,"mtime":1611192614210,"results":"14","hashOfConfig":"10"},{"size":2778,"mtime":1611193213750,"results":"15","hashOfConfig":"10"},{"size":571,"mtime":1611116905877,"results":"16","hashOfConfig":"10"},{"size":689,"mtime":1611191160100,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"h5mz53",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/home/sowmya/codefellows/401/todo/todo-lab31/src/index.js",[],["37","38"],"/home/sowmya/codefellows/401/todo/todo-lab31/src/app.js",[],"/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/todo.js",[],"/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/form.js",["39","40"],"import React, { useState, useEffect } from 'react';\nimport useForm from './form-hook';\n\nfunction TodoForm(props) {\n    const [item, setItem] = useState({text: '', difficulty: 1, assignee: ''});\n    const [_changeInput, _submitForm, formData] = useForm(submit)\n\n    function submit(todo) {\n        props.handleSubmit(todo)\n    }\n\n    // This runs only when the item changes\n    useEffect(() => {\n        console.log(item);\n    }, [item]);\n\n    return (\n        <>\n            <h3>Add Item</h3>\n            <form onSubmit={_submitForm}>\n                <label>\n                    <span>To Do Item</span>\n                    <input\n                        name=\"text\"\n                        placeholder=\"Add To Do List Item\"\n                        onBlur={_changeInput}\n                    />\n                </label>\n                <label>\n                    <span>Difficulty Rating</span>\n                    <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onBlur={_changeInput} />\n                </label>\n                <label>\n                    <span>Assigned To</span>\n                    <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onBlur={_changeInput} />\n                </label>\n                <button type=\"submit\">Add Item</button>\n            </form>\n        </>\n    );\n}\n\n\nexport default TodoForm;","/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/list.js",[],"/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/todo-connected.js",[],"/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/form-hook.js",[],"/home/sowmya/codefellows/401/todo/todo-lab31/src/components/todo/useAjax.js",["41"],"import { useState, useEffect } from 'react'\n\nconst useAjax = () => {\n\n    const [retrievedData, setRetrievedData] = useState(null)\n\n    function makeApiCall(apiUrl, method, request, callback) {\n        fetch(apiUrl, {\n            method: method,\n            mode: 'cors',\n            cache: 'no-cache',\n            headers: { 'Content-Type': 'application/json' },\n            body: request\n          })\n            .then(response => response.json())\n            .then(responseJson => {\n                setRetrievedData(responseJson)\n                callback(method)\n            })\n            .catch(console.error);\n    }\n\n    return [makeApiCall, retrievedData]\n}\n\nexport default useAjax\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":5,"column":18,"nodeType":"48","messageId":"49","endLine":5,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":6,"column":39,"nodeType":"48","messageId":"49","endLine":6,"endColumn":47},{"ruleId":"46","severity":1,"message":"51","line":1,"column":20,"nodeType":"48","messageId":"49","endLine":1,"endColumn":29},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'setItem' is assigned a value but never used.","Identifier","unusedVar","'formData' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]